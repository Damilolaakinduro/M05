import java.util.ArrayList;
import java.util.List;

// Student class to represent student objects
class Student {
    private int studentId;
    private String name;
    private List<Course> courses;

    public Student(int studentId, String name) {
        this.studentId = studentId;
        this.name = name;
        this.courses = new ArrayList<>();
    }

    public int getStudentId() {
        return studentId;
    }

    public String getName() {
        return name;
    }

    public List<Course> getCourses() {
        return courses;
    }

    public void enrollCourse(Course course) {
        courses.add(course);
    }

    @Override
    public String toString() {
        return "Student [ID: " + studentId + ", Name: " + name + "]";
    }
}

// Course class to represent course objects
class Course {
    private int courseId;
    private String courseName;

    public Course(int courseId, String courseName) {
        this.courseId = courseId;
        this.courseName = courseName;
    }

    public int getCourseId() {
        return courseId;
    }

    public String getCourseName() {
        return courseName;
    }

    @Override
    public String toString() {
        return "Course [ID: " + courseId + ", Name: " + courseName + "]";
    }
}

// StudentManagementSystem class to manage students and courses
class StudentManagementSystem {
    private List<Student> students;
    private List<Course> courses;

    public StudentManagementSystem() {
        this.students = new ArrayList<>();
        this.courses = new ArrayList<>();
    }

    public void addStudent(Student student) {
        students.add(student);
    }

    public void addCourse(Course course) {
        courses.add(course);
    }

    public void enrollStudentInCourse(int studentId, int courseId) {
        Student student = findStudentById(studentId);
        Course course = findCourseById(courseId);

        if (student != null && course != null) {
            student.enrollCourse(course);
        }
    }

    public Student findStudentById(int studentId) {
        for (Student student : students) {
            if (student.getStudentId() == studentId) {
                return student;
            }
        }
        return null;
    }

    public Course findCourseById(int courseId) {
        for (Course course : courses) {
            if (course.getCourseId() == courseId) {
                return course;
            }
        }
        return null;
    }
}

public class Main {
    public static void main(String[] args) {
        // Create a StudentManagementSystem
        StudentManagementSystem sms = new StudentManagementSystem();

        // Create students
        Student student1 = new Student(1, "Alice");
        Student student2 = new Student(2, "Bob");

        // Create courses
        Course course1 = new Course(101, "Math");
        Course course2 = new Course(102, "History");

        // Add students and courses to the system
        sms.addStudent(student1);
        sms.addStudent(student2);
        sms.addCourse(course1);
        sms.addCourse(course2);

        // Enroll students in courses
        sms.enrollStudentInCourse(1, 101);
        sms.enrollStudentInCourse(2, 102);

        // Find and display student and course information
        Student foundStudent = sms.findStudentById(1);
        Course foundCourse = sms.findCourseById(101);

        if (foundStudent != null) {
            System.out.println("Found Student: " + foundStudent);
            System.out.println("Enrolled Courses: " + foundStudent.getCourses());
        }

        if (foundCourse != null) {
            System.out.println("Found Course: " + foundCourse);
        }
    }
}
