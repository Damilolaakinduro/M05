import javafx.application.Application;
import javafx.scene.Scene;
import javafx.scene.layout.GridPane;
import javafx.stage.Stage;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.geometry.Insets;


public class Program_1 extends Application {
@Override
public void start(Stage primaryStage) {
// Create a grid pane to hold the images
GridPane pane = new GridPane();
pane.setPadding(new Insets(5, 5, 5, 5));
ImageView usa = new ImageView(new Image("image/us.jpg"));
ImageView china = new ImageView(new Image("image/china.jpg"));
ImageView uk = new ImageView(new Image("image/uk.jpg"));
ImageView canada = new ImageView(new Image("image/ca.gif"));

pane.setHgap(5);
pane.setVgap(5);
pane.add(usa, 0, 0);
pane.add(china, 1, 0);
pane.add(uk, 0, 1);
pane.add(canada, 1, 1);

Scene scene = new Scene(pane);
primaryStage.setTitle("Exercise14_01");
primaryStage.setScene(scene);
primaryStage.show();
}

public static void main(String[] args) {
Application.launch(args);
}
}
This Java code creates a JavaFX application that displays four images in a grid. The images are loaded from files located in a folder named "image". 

The code creates a GridPane object and sets its padding and gaps between cells. Then, it creates four ImageView objects, each containing one of the images, and adds them to the GridPane at specific positions. 

Finally, it creates a Scene object containing the GridPane and sets it as the scene for the primary Stage object. The title of the window is set to "Program_1" and the window is displayed. When run, the program will display the four images in a 2x2 grid.
Step 2/3
here is the second code for the question :

Source code for Program_2.java:
import javafx.application.Application;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.layout.GridPane;
import javafx.stage.Stage;
import javafx.scene.image.ImageView;
import javafx.scene.image.Image;

public class Program_2 extends Application {
@Override // Override the start method in the Application class
public void start(Stage primaryStage) {
Image imageX = new Image("image/x.gif");
Image imageO = new Image("image/o.gif");

GridPane pane = new GridPane();
pane.setAlignment(Pos.CENTER);
pane.setHgap(5);
pane.setVgap(5);

for (int i = 0; i < 3; i++) {
for (int j = 0; j < 3; j++) {
int status = (int)(Math.random() * 3);
if (status == 0) {
pane.add(new ImageView(imageX), j, i);
}
else if (status == 1) {
pane.add(new ImageView(imageO), j, i);
}
}
}
Scene scene = new Scene(pane);
primaryStage.setTitle("Exercise14_02"); // Set the stage title
primaryStage.setScene(scene); // Place the scene in the stage
primaryStage.show(); // Display the stage
}

public static void main(String[] args) {
launch(args);
}
}

Explanation:
This JavaFX program displays a 3x3 grid with randomly placed X and O images. The images are loaded using Image and ImageView classes. 

The GridPane layout is used to position the images and set the gaps between them. 

The application is launched using the main method and a Scene is created and added to a Stage for display.

Step 3/3

Source code for Program_3.java:
import javafx.application.Application;
import javafx.scene.Scene;
import javafx.scene.layout.HBox;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.geometry.Insets;
import javafx.stage.Stage;
import java.util.Random;

public class Program_3 extends Application {
@Override
public void start(Stage primaryStage) {
// create a pane to store the images
HBox pane = new HBox(15);
pane.setPadding(new Insets(15,15,15,15));

// make an array of the card numbers
int[] cardNumbers = new int[52];
for (int i = 0; i < 52; i++) {
cardNumbers[i] = i + 1;
}

// randomly select 3 numbers from 0 - array.size
Random r = new Random();
int num1 = r.nextInt(52);
int num2 = r.nextInt(52);
int num3 = r.nextInt(52);

// ensure that the numbers are distinct
while (num1 == num2) {
num2 = r.nextInt(52);
}
while ((num1 == num3) || (num2 == num3)) {
num3 = r.nextInt(52);
}

ImageView card1 = new ImageView(new Image("card/"+cardNumbers[num1]+".png"));
ImageView card2 = new ImageView(new Image("card/"+cardNumbers[num2]+".png"));
ImageView card3 = new ImageView(new Image("card/"+cardNumbers[num3]+".png"));

// add pictures to the pane
pane.getChildren().addAll(card1, card2, card3);

// create a scene and place it in the stage
Scene scene = new Scene(pane);
primaryStage.setTitle("Exercise14_03");
primaryStage.setScene(scene);
primaryStage.show();
}

public static void main(String[] args) {
Application.launch(args);
}
}
This code creates a JavaFX application that displays three randomly-selected playing cards from a deck.

It generates three random numbers within a range and uses them to load corresponding card images into ImageViews. 

These ImageViews are added to an HBox pane, which is then displayed on the stage.
Final answer
Was this answer helpful?

1

0
Post a question
Your toughest questions, solved step-by-step.

Post a question text
For example: What is E = mc^2?
15 days left to ask 20 more questions

Continue to post
Questions viewed by other students
Q:
JAVA IMAGES are below card images
A:
See answer
100% (1 rating)
Q:
I need the program in Java Fx
A:
See answer

Show more
